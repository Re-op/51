C51 COMPILER V9.60.0.0   MAIN                                                              10/14/2022 14:53:31 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\electric\MKD_ARM\Core\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.
                    -\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "reg52.h"
   2          
   3          #define uchar unsigned char
   4          #define uint unsigned int
   5          
   6          
   7          
   8          sbit AN2=P3^3;
   9          sbit AN3=P3^4;
  10          sbit AN1=P1^5;
  11          
  12          #define AN1PIN 0x20
  13          #define AN2PIN 0x10
  14          #define AN3PIN 0x08
  15          #define NONPIN 0xff
  16          #define KEYMASK (AN1PIN+AN2PIN+AN3PIN)
  17          
  18          
  19          
  20          
  21          uchar code SegCode[]={0xaf,0xa0,0xc7,0xe5,0xe8,0x6d,0x6f,0xa1,0xef,0xe9,0xeb,0x6e,0x0f,0xe6,0x4f,0x4b,0xc8
             -,0x10,0x00,0x40};
  22          uchar code PlaceCode[]={0x04,0x20,0x10,0x08};
  23          uchar DispBuf[]={4,3,2,1};
  24          uchar Key_Value=0;
  25          uchar Key_Count=0;
  26          uchar Key_Down=0;
  27          uchar StateNum;
  28          char code reserve[3]_at_ 0x3b;
  29          
  30          
  31          
  32          
  33          void DelayMs(uint n){
  34   1        uchar j;
  35   1        while(n--){
  36   2          for(j=0;j<113;j++);
  37   2        }
  38   1      }
  39          
  40          void BufToSeg(){
  41   1        uchar i;
  42   1        for(i=0;i<4;i++){
  43   2          if(i==StateNum)
  44   2            P0=SegCode[DispBuf[i]]|0x10;
  45   2          else P0=SegCode[DispBuf[i]];
  46   2          P2=PlaceCode[i];
  47   2          DelayMs(2);
  48   2          P2&=0xc3;
  49   2        }
  50   1      }
  51          
  52          
  53          uchar ReadKey(){
C51 COMPILER V9.60.0.0   MAIN                                                              10/14/2022 14:53:31 PAGE 2   

  54   1        if(AN1==0)
  55   1          return ~AN1PIN;
  56   1        else if(AN2==0)
  57   1          return ~AN2PIN;
  58   1        else if(AN3==0)
  59   1          return ~AN3PIN;
  60   1        else
  61   1          return NONPIN;
  62   1      }
  63          
  64          
  65          uchar Key_Scan(){
  66   1        uchar temp,Key_Num=0;
  67   1        temp=KEYMASK & ReadKey();
  68   1      
  69   1        if(temp!=KEYMASK){
  70   2          Key_Count++;
  71   2          if(Key_Count==10) {
  72   3            Key_Down=1;
  73   3            Key_Value=temp;
  74   3          }
  75   2        }
  76   1        else{
  77   2          Key_Count=0;
  78   2          if(Key_Down==1){
  79   3            Key_Down=0;
  80   3            switch(Key_Value){
  81   4              case 0x18:Key_Num=1;break;
  82   4              case 0x28:Key_Num=2;break;
  83   4              case 0x30:Key_Num=3;break;
  84   4              default:break;
  85   4            }
  86   3          }
  87   2        }
  88   1        return(Key_Num);
  89   1      }
  90          
  91          
  92          void main(void)
  93          {
  94   1        uchar temp;
  95   1        while(1)
  96   1        {
  97   2          temp=Key_Scan();
  98   2          switch(temp)
  99   2          {
 100   3            case 1:
 101   3            if(++StateNum>3)
 102   3            StateNum=0;
 103   3          break;
 104   3            case 2:
 105   3            if(++DispBuf[StateNum]>15)
 106   3              DispBuf[StateNum]=0;
 107   3          break;
 108   3            case 3:
 109   3          if(--DispBuf[StateNum]>15)
 110   3            DispBuf[StateNum]=15;
 111   3            break;
 112   3            default:
 113   3            break;
 114   3          }
 115   2          BufToSeg();
C51 COMPILER V9.60.0.0   MAIN                                                              10/14/2022 14:53:31 PAGE 3   

 116   2          DelayMs(5);
 117   2        }
 118   1      }
 119          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    268    ----
   CONSTANT SIZE    =     24    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
